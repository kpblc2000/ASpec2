<ResourceDictionary x:Class="ASpecCore.Themes.Generic"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ASpecCore.Themes">

    <ControlTemplate x:Key="CustomContentTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                CornerRadius="5"
                                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                <Setter Property="Foreground" Value="Blue"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="LightGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="Window">
        <Setter Property="WindowStyle" Value="ToolWindow"/>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Template" Value="{StaticResource CustomContentTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsCancel" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGrid">
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="AlternatingRowBackground" Value="LightGray"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>
    <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
    <!--<Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger  Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>-->
    <Style TargetType="DataGridRow">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkGray"/>
        </Style.Resources>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style TargetType="ComboBox">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="1"/>
    </Style>
</ResourceDictionary>
